# -*- coding: utf-8 -*-
"""A/B Testing Marketing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GFnx-3lMnsifQdvuOufGn7uGzVwZExvw

# Introduction


A [fast-food chain](https://drive.google.com/file/d/1dQsnvaPOQ2zAsg8uc8UVhER7GIztrEW-/view?usp=sharing) plans to add a new item to its menu. However, they are still undecided between three possible marketing campaigns for promoting the new product. In order to determine which promotion has the greatest effect on sales, the new item is introduced at locations in several randomly selected markets. A different promotion is used at each location, and the weekly sales of the new item are recorded for the first four weeks.



Objective:


By this analysis, we would be using A/B testing to determine which promotional activity works best for the company.(in term of magnitude)

Features Explanation:


MarketID: unique identifier for market


MarketSize: size of market area by sales

LocationID: unique identifier for store location

AgeOfStore: age of store in years

Promotion: one of three promotions that were tested


week: one of four weeks when the promotions were run


SalesInThousands: sales amount for a specific LocationID, Promotion, and week

# Importing libraries and Loading the dataset

In this step, we will first import libraries and then load this educational dataset into the notebook.
"""

# importing libraries
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
import io
sns.set_style('darkgrid')
# ignore warnings
import warnings
warnings.simplefilter('ignore')

from google.colab import files
uploaded = files.upload()

# loading the file
df = pd.read_csv(io.BytesIO(uploaded['WA_Marketing-Campaign.csv']))

"""# Exploring the data

In this step,we will explore the dataset so as to determine or dig out some facts about it.
"""

# look at the head
df.head()

# look at the tail
df.tail()

"""The above dataset shows the weekly sales of the firm in different stores belonging to different market size using different promotional techniques."""

# number of rows and columns
print("The given dataset has {} number of rows and {} number of features.".format(df.shape[0],df.shape[1]))

# info : to get the datatype of each column
df.info()

"""There are all numerical variables except the marketID which has object datatype.


Also, it look like there are no null values (due to correct datatype of columns)
"""

# describe about the variables
round(df.describe(),2)

# knowlegde about the object variable
df['MarketSize'].value_counts()

"""* On average , sales are 53 thousands dollars. If we look at the way sales changes(from min to 100%) there appears to be les number of outliers in it.

* Age of stores lies between 1 and 28 with average age of 8 years.



* About 60 percent of the markets are of medium size. Also there are about 90 percent of market are non-small (medium+ large).



"""

# number of unique values in each feature
df.nunique()

# unique values
for x in df.columns:
  if x != 'SalesInThousands':
    print("The unique values of {} are {}".format(x,pd.unique(df[x])))

"""* There are 10 markets (1 to 10)
* There are four weeks for promotion (1,2,3,4)

Now, we will check the correlation between various features
"""

# using corr method of pandas
round(df.corr(),2)

# using seaborn method
correl = df.corr()
sns.heatmap(correl)

"""Insights about the correlation:


There seems to be lack of correlation in the numerical variables (that is either quite low postive correlation or low negative correlation.

Promotion wise :


We will explore the dataset on the basis of promotion, that is how sales vary based on the promotion chosen.
"""

# NUMBER OF SALES OF DIFFERENT PROMOTIONS
sns.countplot(df['Promotion'])
plt.title("Number of sales per promotion",fontsize=15)

# average sales of each promotion
sns.barplot(df['Promotion'],df['SalesInThousands'])
plt.title("Sales per promotion",fontsize=15)

"""Insights

1. Although there are more number of sales from promotion_2, yet it accounst for a less amount of sales on average.
2. Sales from promotion_1 and promotion_3 are virtually same (overall).

# A/A test

A/A test is a test of presence of randomness in the sample. On the basis of these tests, we can find whether it is good to go ahead and conduct A/B testing or not.
 Now,we will conduct the A/A test to know whether the sales in thousands are of random nature or not.
"""

# create a rand value using numpy rand
x= np.random.rand()
rand_val =[]
for y in df['SalesInThousands']:
  rand_val.append(np.random.rand())
df['rand1or0']  = rand_val

# taking two group of values
less_than_05 = df[df['rand1or0']<=0.5]['SalesInThousands']
more_than_05 = df[df['rand1or0']>0.5]['SalesInThousands']

# checking the p-value and t-statistics
from scipy.stats import ttest_ind
res = ttest_ind(less_than_05,more_than_05)
t_stat, p_value = res[0],res[1]
if p_value < 0.05:
  print("there is a significance difference in two samples implying that there is a presence of bias in these samples")
else:
  print("There is no difference in these samples which implies the samples are unbiased and hence, of random nature.")

"""From the above A/A test, we found out that the samples of sales is of random nature which suggests that the A/B testing done on these samples would be authentic and result-yielding.

# A/ B testing

Now, we are aware that our samples are of random nature. Thanks to this, we will now conduct A/B test to know which promotion line works best for the firm.


Through A/ B testing, we would like to answer the following questions:


1. How promotion affects the sales of a market based on its size (that is how same size market works in different promotion channel)


2. How promotion affects the market based on week, that is which promotion works based in each week.
3. How promotion impacts the sales based on age of store.
4. which promotion performs well over others when we compare it over location wise.

## 1.  How promotion affects the sales of a market based on its size (that is how same size market works in different promotion channel)


In this , we will first see which promotions are having a touch competition in sales when compared marketwise. Then based on it, we will see how  we will conduct the hypothesis testing.
"""

# size wise 
small_sales = df[df['MarketSize']=='Small'][['SalesInThousands','Promotion']]
med_sales = df[df['MarketSize']=='Medium'][['SalesInThousands','Promotion']]
lar_sales  = df[df['MarketSize']=='Large'][['SalesInThousands','Promotion']]

# barplot 
sns.barplot(small_sales['Promotion'],small_sales['SalesInThousands'])
plt.title("Small Size Firm Sales", fontsize=15)

sns.barplot(med_sales['Promotion'],med_sales['SalesInThousands'])
plt.title("Medium Size firm Sales",fontsize=15)

sns.barplot(lar_sales['Promotion'],lar_sales['SalesInThousands'])
plt.title("large Size firm Sales",fontsize=15)

"""From the above graph , we find out there is promotion_2 performs least of three.

While there remains doubt in case of promotion_1 and promotion_3. To get more evidence we will test it through the hypothesis test:

Ho : THere is no difference between salesinthoushand between promotion_1 and promotion_3.

Ha: There is a significance difference between sales_in_thousand between promotion_1 and promotion_3.


"""

# for small size
res = ttest_ind(small_sales[small_sales['Promotion']==1]['SalesInThousands'],small_sales[small_sales['Promotion']==3]['SalesInThousands'])
t_stat, p_value = res[0],res[1]
if p_value < 0.05:
  print("P-value is {}, so there is a difference in sales for promotion 1 and promotion 3 for small size firms".format(p_value))
else:
  print("P-value is {},hence there is no significant difference in sales for promotion 1 and promition 3 for small size firms".format(p_value)  )

# for large size
res = ttest_ind(lar_sales[lar_sales['Promotion']==1]['SalesInThousands'],lar_sales[lar_sales['Promotion']==3]['SalesInThousands'])
t_stat, p_value = res[0],res[1]
if p_value < 0.05:
  print("P-value is {}, so there is a difference in sales for promotion 1 and promotion 3 for large size firms".format(p_value))
else:
  print("P-value is {},hence there is no significant difference in sales for promotion 1 and promition 3 for large size firms".format(p_value)  )

"""From the above, we find the promotion 2 works worst for all size of markets. While there appears to be no difference in average sales from promotion 1 and promotion 3.

Now,we will dive further, like week wise promotion impact on sales.


## 2. How promotion affects the market based on week, that is which promotion works based in each week.



Ho : THere is no difference between salesinthoushand between promotion_1 and promotion_3 across weeks.

Ha: There is a significance difference between sales_in_thousand between promotion_1 and promotion_3 across weeks.



"""

df.columns

# equal number of observations for each week
df['week'].value_counts()

# division based on week
# size wise 
first_sales = df[df['week']==1][['SalesInThousands','Promotion']]
sec_sales = df[df['week']==2][['SalesInThousands','Promotion']]
third_sales  = df[df['week']==3][['SalesInThousands','Promotion']]
four_sales = df[df['week']==4][['SalesInThousands','Promotion']]

# first sales average sales
sns.barplot(first_sales['Promotion'],first_sales['SalesInThousands'])
plt.title("Sales in first week",fontsize=15)

# second week sales
sns.barplot(sec_sales['Promotion'],sec_sales['SalesInThousands'])
plt.title("Sales in second week",fontsize=15)

# third week sales
sns.barplot(third_sales['Promotion'],third_sales['SalesInThousands'])
plt.title("Sales in third week",fontsize=15)

# fourth week sales
sns.barplot(third_sales['Promotion'],third_sales['SalesInThousands'])
plt.title("Sales in fourth week",fontsize=15)

# for first week
res = ttest_ind(first_sales[first_sales['Promotion']==1]['SalesInThousands'],first_sales[first_sales['Promotion']==3]['SalesInThousands'])
t_stat, p_value = res[0],res[1]
if p_value < 0.05:
  print("P-value is {}, so there is a difference in sales for promotion 1 and promotion 3 for first_week firms".format(p_value))
else:
  print("P-value is {},hence there is no significant difference in sales for promotion 1 and promition 3 for first_week firms".format(p_value)  )

# for second week
res = ttest_ind(sec_sales[sec_sales['Promotion']==1]['SalesInThousands'],sec_sales[sec_sales['Promotion']==3]['SalesInThousands'])
t_stat, p_value = res[0],res[1]
if p_value < 0.05:
  print("P-value is {}, so there is a difference in sales for promotion 1 and promotion 3 for second week".format(p_value))
else:
  print("P-value is {},hence there is no significant difference in sales for promotion 1 and promition 3 for second week".format(p_value)  )

# for third week
res = ttest_ind(third_sales[third_sales['Promotion']==1]['SalesInThousands'],third_sales[third_sales['Promotion']==3]['SalesInThousands'])
t_stat, p_value = res[0],res[1]
if p_value < 0.05:
  print("P-value is {}, so there is a difference in sales for promotion 1 and promotion 3 for third week".format(p_value))
else:
  print("P-value is {},hence there is no significant difference in sales for promotion 1 and promition 3 for third week".format(p_value)  )

# for fourth wek
res = ttest_ind(four_sales[four_sales['Promotion']==1]['SalesInThousands'],four_sales[four_sales['Promotion']==3]['SalesInThousands'])
t_stat, p_value = res[0],res[1]
if p_value < 0.05:
  print("P-value is {}, so there is a difference in sales for promotion 1 and promotion 3 for small size firms".format(p_value))
else:
  print("P-value is {},hence there is no significant difference in sales for promotion 1 and promition 3 for small size firms".format(p_value)  )

"""Based on above analysis, we found out that promotion_2 does not work througout all weeks. Rather, there was a stiff competition between promotion_1 and promotion_3 throughout these weeks. On basis of numbers, we can say but promotion_1 has a higher average sales than promotion_3 (but this difference was not too much to be called significant difference).

##  How promotion impacts the sales based on age of store?

Now, we will see the impact of promotion based on the age of store. That is do we have more sales with old firm  or with new firms?
"""

# distribution of age store
df['AgeOfStore'].value_counts()

# using histplot
df['AgeOfStore'].hist()
plt.title("Distribution of Age of store",fontsize=15)

# describe about the age of store
df['AgeOfStore'].describe()

"""From the above, we can see that there are more number of firms that are new.  (mainly below 10 years)

Let us divide the firms based on the age into new and old. The firm which is less than or equal to 7 years of age (using median) can be classified as new one and ones which is more than 7 years can be classified as old.
"""

# new and old

def old_new(x):
  if x<=7:
    return "new"
  else:
    return "old"

# using this old_new function using map method
df['old_new'] = df['AgeOfStore'].map(old_new)

# showing average values of sales for each category of firm
sns.barplot(df['old_new'],df['SalesInThousands'])
plt.title("Sales for firms",fontsize=15)

# see this with respct to promotion
sns.barplot(x='old_new',y= 'SalesInThousands',hue='Promotion',data =df)
plt.title("sales for firms promotion wise",fontsize=15)

"""The average sales for both old and new is higher for new firms (slightly).

Promotion _1 works best for new firms, while in case of old firms, there is indifference between promotion_1 and promotion_2.


Let's test this with the help of hypothesis testing


Ho: There is no significant difference between sales for new and old firms across promotions

Ha: There is a significant difference between sales for new and old firms across promotion.




"""

# division based on age 
old_firm = df[df['old_new']=='old'][['SalesInThousands','Promotion']]
new_firm = df[df['old_new']=='new'][['SalesInThousands','Promotion']]

# for old_firm
res = ttest_ind(old_firm[old_firm['Promotion']==1]['SalesInThousands'],old_firm[old_firm['Promotion']==3]['SalesInThousands'])
t_stat, p_value = res[0],res[1]
if p_value < 0.05:
  print("P-value is {}, so there is a difference in sales for promotion 1 and promotion 3 for old firms".format(p_value))
else:
  print("P-value is {},hence there is no significant difference in sales for promotion 1 and promition 3 for  old firms".format(p_value)  )

# for new_firm
res = ttest_ind(new_firm[new_firm['Promotion']==1]['SalesInThousands'],new_firm[new_firm['Promotion']==3]['SalesInThousands'])
t_stat, p_value = res[0],res[1]
if p_value < 0.05:
  print("P-value is {}, so there is a difference in sales for promotion 1 and promotion 3 for new firms".format(p_value))
else:
  print("P-value is {},hence there is no significant difference in sales for promotion 1 and promition 3 for new firms".format(p_value)  )

"""Although  both new and old firms are earning more in promotion 1 compared to promotion_3, yet there are no conclusive evidence to say that the average sales are more for both firms in case of promotion_1 than promotion_3.

## 4.  which promotion performs well over others when we compare it over location wise.

Now, we will first explore the location_id of the dataset to obtain any insights and then, based on it , we will conduct our test. Here, location_id is an important factor as usually firm's sales are decided by its location.
"""

# describe about location_id
df['LocationID'].describe()

# value distribution
df['LocationID'].value_counts()

# histogram
df['LocationID'].hist()
plt.title("Distribution of location_id",fontsize=15)

""" The firms have location id vary from 0 to 1000.
Let us divide the location_id into three categories: 0-300,300-600 and 600 and above.
"""

# defining function for it
def cat_loc(x):
  if x<=300:
    return 1
  elif x<600:
    return 2
  else:
    return 3

# using map function to convert and create a new column
df['cat_loc'] = df['LocationID'].map(cat_loc)

# sales based on this new column
sns.barplot(df['cat_loc'],df['SalesInThousands'])
plt.title("Sales over location",fontsize=15)

# sales distribution with promtion wise
sns.barplot(df['cat_loc'],df['SalesInThousands'],hue ='Promotion',data=df)
plt.title("Sales over location , promotion wise",fontsize=15)

"""The promotion_2 performs worst for all location categories. Whereas, promotion 1 performs best.

Let's test this with the help of hypothesis testing


Ho: There is no significant difference between sales for firms located in different areas across promotion.

Ha: There is a significant difference between sales for firms located in different areas across promotion.
"""

# division based on location
loc_1 = df[df['cat_loc']==1][['SalesInThousands','Promotion']]
loc_2 = df[df['cat_loc']==2][['SalesInThousands','Promotion']]
loc_3 = df[df['cat_loc']==3][['SalesInThousands','Promotion']]

# for location_1
res = ttest_ind(loc_1[loc_1['Promotion']==1]['SalesInThousands'],loc_1[loc_1['Promotion']==3]['SalesInThousands'])
t_stat, p_value = res[0],res[1]
if p_value < 0.05:
  print("P-value is {}, so there is a difference in sales for promotion 1 and promotion 3 for location 1".format(p_value))
else:
  print("P-value is {},hence there is no significant difference in sales for promotion 1 and promition 3 for location 1".format(p_value)  )

# for location_1
res = ttest_ind(loc_1[loc_1['Promotion']==1]['SalesInThousands'],loc_1[loc_1['Promotion']==3]['SalesInThousands'])
t_stat, p_value = res[0],res[1]
if p_value < 0.05:
  print("P-value is {}, so there is a difference in sales for promotion 1 and promotion 3 in location 1".format(p_value))
else:
  print("P-value is {},hence there is no significant difference in sales for promotion 1 and promition 3 in location 1".format(p_value)  )

# for location_2
res = ttest_ind(loc_2[loc_2['Promotion']==1]['SalesInThousands'],loc_2[loc_2['Promotion']==3]['SalesInThousands'])
t_stat, p_value = res[0],res[1]
if p_value < 0.05:
  print("P-value is {}, so there is a difference in sales for promotion 1 and promotion 3 in location 2".format(p_value))
else:
  print("P-value is {},hence there is no significant difference in sales for promotion 1 and promition 3 in location 1".format(p_value)  )

# for location_3
res = ttest_ind(loc_3[loc_3['Promotion']==1]['SalesInThousands'],loc_3[loc_3['Promotion']==3]['SalesInThousands'])
t_stat, p_value = res[0],res[1]
if p_value < 0.05:
  print("P-value is {}, so there is a difference in sales for promotion 1 and promotion 3 in location 3".format(p_value))
else:
  print("P-value is {},hence there is no significant difference in sales for promotion 1 and promition 3 in location 3".format(p_value)  )

"""From the above, we can see the results shown by the barplot are reiterated by the hypothesis tests. The firms located in location_1 or location_3 are enjoying more average sales in case of promotion_1 compared to promotion_3.

#  Conclusion:

Based on the above analysis, we have found the following insights:

* The promotion_2 yields least amount of benefits(or sales on average) to the firms irrespective of location, age, week, or size.

* It was found that promotion_1 and promotion_3 have been close on their impact on sales ,although promotion_1 generated a higher average sales but it was only marginal,  when compared on the basis of marketsize, week, age of store. The same was being assured from the evidence provided by A/B tests that shows lack of a significant difference in sales for marketsize, week, and age.


* On the contrary, there was an outlier  in case of location where promotion_1 generated the relatively higher average sales to the firms.



Hence, the firm can make use of either promotion_1 or promotion_3. Since, promotion_1 performs  significantly better in case of location and it has a higher average sales in case of age , weeek and age, **promotion_1 would help in optimizing the business revenue.**
"""